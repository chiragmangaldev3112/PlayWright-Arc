{
  "compilerOptions": {
    /* Language and Environment */
    "target": "ES2022",                                  /* Set the JavaScript language version for emitted JavaScript */
    "lib": ["ES2022"],                                   /* Specify a set of bundled library declaration files */
    "module": "ESNext",                                /* Specify what module code is generated */
    "moduleResolution": "node",                          /* Specify how TypeScript looks up a file from a given module name */
    
    /* Emit */
    "outDir": "./dist",                                  /* Specify an output folder for all emitted files */
    "rootDir": "./",                                     /* Specify the root folder within your source files */
    "removeComments": true,                              /* Disable emitting comments */
    "noEmitOnError": true,                              /* Disable emitting files if any type checking errors are reported */
    
    /* Interop Constraints */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports */
    "allowSyntheticDefaultImports": true,                /* Allow 'import x from y' when a module doesn't have a default export */
    
    /* Type Checking - STRICT MODE ENABLED */
    "strict": true,                                      /* Enable all strict type-checking options */
    "noImplicitAny": true,                              /* Enable error reporting for expressions and declarations with an implied 'any' type */
    "strictNullChecks": true,                           /* When type checking, take into account 'null' and 'undefined' */
    "strictFunctionTypes": true,                        /* When assigning functions, check to ensure parameters and the return values are subtype-compatible */
    "strictBindCallApply": true,                        /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function */
    "strictPropertyInitialization": true,               /* Check for class properties that are declared but not set in the constructor */
    "noImplicitReturns": true,                          /* Enable error reporting for codepaths that do not explicitly return in a function */
    "noFallthroughCasesInSwitch": true,                 /* Enable error reporting for fallthrough cases in switch statements */
    "noUncheckedIndexedAccess": true,                   /* Add 'undefined' to a type when accessed using an index */
    "noImplicitOverride": true,                         /* Ensure overriding members in derived classes are marked with an override modifier */
    "exactOptionalPropertyTypes": true,                 /* Interpret optional property types as written, rather than adding 'undefined' */
    
    /* Additional Checks */
    "noUnusedLocals": true,                             /* Enable error reporting when local variables aren't read */
    "noUnusedParameters": true,                         /* Raise an error when a function parameter isn't read */
    "allowUnreachableCode": false,                      /* Disable error reporting for unreachable code */
    "allowUnusedLabels": false,                         /* Disable error reporting for unused labels */
    
    /* Completeness */
    "skipLibCheck": true,                               /* Skip type checking all .d.ts files */
    
    /* Resolution */
    "baseUrl": "./",                                    /* Specify the base directory to resolve non-relative module names */
    "paths": {
      "@/*": ["./*"],
      "@tests/*": ["./tests/*"],
      "@pages/*": ["./pages/*"],
      "@api/*": ["./api/*"],
      "@utils/*": ["./utils/*"],
      "@config/*": ["./config/*"],
      "@types/*": ["./types/*"],
      "@types": ["./types/index"],
      "@data/*": ["./data/*"]
    },
    
    /* Advanced */
    "resolveJsonModule": true,                          /* Enable importing .json files */
    "declaration": true,                                /* Generate .d.ts files from TypeScript and JavaScript files in your project */
    "declarationMap": true                              /* Create sourcemaps for d.ts files */
  },
  "include": [
    "**/*.ts",
    "**/*.js",
    "types/**/*"
  ],
  "exclude": [
    "node_modules",
    "dist",
    "playwright-report",
    "test-results",
    "allure-results"
  ],
  "ts-node": {
    "esm": true
  }
}
